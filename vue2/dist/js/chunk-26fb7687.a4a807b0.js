(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-26fb7687"],{"63ee":function(a,t,e){"use strict";e.r(t);var s=e("8336"),r=e("a523"),l=e("0e8f"),c=e("a722"),n=e("8e36"),i=e("b974"),o=e("2db4"),u=e("8654"),d=function(){var a=this,t=a._self._c;return t("div",[a.loading?t(n["a"],{attrs:{indeterminate:!0}}):t(r["a"],{staticClass:"my-2"},[t("form",{attrs:{autocomplete:"off"},on:{submit:function(t){return t.preventDefault(),a.updateCars.apply(null,arguments)}}},[t(c["a"],{attrs:{row:"",wrap:""}},[t(l["a"],{attrs:{xs12:"",lg2:"",xl2:"",md3:"",sm4:""}},[t(u["a"],{staticClass:"mx-1",attrs:{type:"text",label:a.$store.getters.language.data.cars.car_name,filled:"",outlined:"",dense:"",required:""},model:{value:a.cars.car_name,callback:function(t){a.$set(a.cars,"car_name",t)},expression:"cars.car_name"}})],1),t(l["a"],{attrs:{xs12:"",lg2:"",xl2:"",md3:"",sm4:""}},[t(u["a"],{staticClass:"mx-1",attrs:{type:"text",label:a.$store.getters.language.data.cars.car_model,filled:"",outlined:"",dense:""},model:{value:a.cars.car_model,callback:function(t){a.$set(a.cars,"car_model",t)},expression:"cars.car_model"}})],1),t(l["a"],{attrs:{xs12:"",lg2:"",xl2:"",md3:"",sm4:""}},[t(u["a"],{staticClass:"mx-1",attrs:{type:"text",label:a.$store.getters.language.data.cars.car_year,filled:"",outlined:"",dense:""},model:{value:a.cars.car_year,callback:function(t){a.$set(a.cars,"car_year",t)},expression:"cars.car_year"}})],1),t(l["a"],{attrs:{xs12:"",lg2:"",xl2:"",md3:"",sm4:""}},[t(u["a"],{staticClass:"mx-1",attrs:{type:"text",label:a.$store.getters.language.data.cars.car_note,filled:"",outlined:"",dense:""},model:{value:a.cars.car_note,callback:function(t){a.$set(a.cars,"car_note",t)},expression:"cars.car_note"}})],1),t(l["a"],{attrs:{xs12:"",lg2:"",xl2:"",md3:"",sm4:""}},[t(i["a"],{staticClass:"mx-1",attrs:{clearable:"",items:a.users,dense:"",filled:"",outlined:"","item-text":"user_id","item-value":"user_id","return-object":!1,label:a.$store.getters.language.data.users.user_id},model:{value:a.cars.user_id,callback:function(t){a.$set(a.cars,"user_id",t)},expression:"cars.user_id"}})],1),t(l["a"],{attrs:{xs12:"",lg2:"",xl2:"",md2:"",sm4:""}},[t(s["a"],{attrs:{color:"success",type:"submit"}},[a._v(a._s(a.$store.getters.language.data.cars.update_btn))])],1)],1)],1)]),t(o["a"],{attrs:{color:a.snackbar.color},model:{value:a.snackbar.value,callback:function(t){a.$set(a.snackbar,"value",t)},expression:"snackbar.value"}},[a._v(" "+a._s(a.snackbar.text)+" ")])],1)},m=[],g=e("bb50"),p={data(){return{cars:{},id:"",loading:!0,snackbar:{value:!1,text:"",color:""}}},computed:{users(){return this.$store.getters.users_list}},mounted(){this.id=this.$route.params.id,this.getOneCars()},methods:{getOneCars(){this.loading=!0,g["a"].getOneCars(this.id).then(a=>{200==a.status?(this.cars=a.data.row,this.loading=!1):this.snackbar={value:!0,text:"Fail to read Cars",color:"error"}}).catch(a=>{this.snackbar={value:!0,text:"Fail to read Cars",color:"error"}}).finally(()=>{this.loading=!1})},updateCars(){this.loading=!0,g["a"].updateCars(this.id,this.cars).then(a=>{200==a.status?(this.snackbar={value:!0,text:"Cars Updated",color:"success"},this.loading=!1):(this.snackbar={value:!0,text:"Update Faild",color:"error"},this.loading=!1)}).catch(a=>{this.snackbar={value:!0,text:"Update Faild",color:"error"},this.loading=!1}).finally(()=>{this.loading=!1})}}},b=p,x=e("2877"),_=Object(x["a"])(b,d,m,!1,null,null,null);t["default"]=_.exports},bb50:function(a,t,e){"use strict";var s=e("bc3a"),r=e.n(s);t["a"]={async createCars(a){return await r.a.post("cars/create",a)},async createCarsList(a){return await r.a.post("cars/create/list",a)},async updateCarsColumn(a,t,e){return await r.a.put(`cars/update_list?${a}=${t}`,e)},async deleteCarsList(a){return await r.a.delete("cars/delete_list",{data:{list:a}})},async reportCars(a,t){return await r.a.get(`cars/report?${a}=${t}`)},async getAllCars(){return await r.a.get("cars/all")},async getOneCars(a){return await r.a.get("cars/all/"+a)},async getCarsByColumn(a,t){return await r.a.get(`cars/filter?column=${a}&value=${t}`)},async deleteCars(a){return await r.a.delete("cars/delete/"+a)},async updateCars(a,t){return await r.a.put("cars/update/"+a,t)}}}}]);
//# sourceMappingURL=chunk-26fb7687.a4a807b0.js.map